plugins {
    id 'java'
    id 'maven-publish'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'com.mcreater'
version '0.1'

sourceCompatibility = "1.9"
targetCompatibility = "1.9"

repositories {
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://mvnrepository.com/artifact/' }
    maven { url 'https://jitpack.io/' }
    mavenCentral()
}

javafx {
    if (getJavaVersion() > 10) {
        version = '19.0.2.1'
        modules = ['javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web']
    }
}

static int getJavaVersion() {
    int version = 0
    String[] ful = System.getProperty("java.runtime.version").split("\\.");
    if (Integer.parseInt(ful[0]) == 1) {
        version = Integer.parseInt(ful[1]);
    } else {
        version = Integer.parseInt(ful[0]);
    }
    return version
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation project(":fluentcore")
    implementation "net.java.dev.jna:jna:5.7.0"
    implementation "net.java.dev.jna:jna-platform:5.7.0"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title "Javadoc root"
    }
}

publishing {
    publications {
        fluentcorej9(MavenPublication) {
            groupId group
            artifactId name
            version version

            artifact sourcesJar
            artifact jar
//            artifact javadocJar
        }
    }

    repositories {
        maven { url uri(new File(rootProject.projectDir.getAbsolutePath(), "maven").getAbsolutePath()) }
    }
}