plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.mcreater'
version '0.1'

sourceCompatibility = "8"
targetCompatibility = "8"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation rootProject.files("libs/jfxrt.jar")
    implementation rootProject.files("libs/java-objc-bridge-1.0.0.jar")
    implementation "net.java.dev.jna:jna:5.7.0"
    implementation "net.java.dev.jna:jna-platform:5.7.0"
    implementation "org.dom4j:dom4j:2.0.1"
    implementation "com.google.code.gson:gson:2.8.8"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title "Javadoc root"
    }
}

publishing {
    publications {
        fleuntcore(MavenPublication) {
            groupId group
            artifactId name
            version version

            artifact sourcesJar
            artifact jar
//            artifact javadocJar

            pom.withXml {
                Node root = asNode().appendNode("dependencies", new HashMap())
                this.configurations.implementation.dependencies.forEach {
                    if (it.group != "org.openjfx" && it.name != "unspecified") {
                        Node dependencyNode = root.appendNode("dependency")
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven { url uri(new File(rootProject.projectDir.getAbsolutePath(), "maven").getAbsolutePath()) }
    }
}